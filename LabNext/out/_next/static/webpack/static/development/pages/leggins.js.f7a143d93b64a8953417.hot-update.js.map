{"version":3,"file":"static/webpack/static/development/pages/leggins.js.f7a143d93b64a8953417.hot-update.js","sources":["webpack:///./src/components/common.tsx"],"sourcesContent":["import React, { useContext, useState, useEffect, useReducer, useRef } from \"react\"\nimport Link from \"next/link\"\nimport Head from \"next/head\"\n\nimport { ThemeContext, LookContext, Light, Dark } from \"./style\";\nimport { VSpaced, HSpaced, SlideoverPanel } from \"./layout\";\nimport { StoreItem } from \"../shared/components\";\nimport { Section, SectionProps } from \"./section\";\nimport { ShoppingCartContext, ShoppingCart, SCActionType, SHOPPING_CART_VERSION, SCReducer } from \"./shopping\";\nimport { useMobileScroll, useWindowBounds, useCancel, useClick, useKeyDown } from \"./hooks\";\n\n//TODO: provide default image for product\nexport const defaultImage = \"\";\n\ninterface MobileHeaderProps {\n    onHamburger?: () => void;\n    title: string;\n    animated?: boolean;\n}\nexport const MobileHeader: React.FC<MobileHeaderProps> = props => {\n    let shown = useMobileScroll(true, 50)\n    let theme = useContext(ThemeContext)\n    let look = useContext(LookContext)\n    return <>\n        <style jsx>{`\n            header {\n                display: flex;\n                z-index: 10;\n                width: 100%;\n                height: 50px;\n                position: fixed;\n                top: 0;\n                /* left: 0; */\n                background-color: ${theme.mobileHeaderColor};\n                transition: transform 0.2s 0s ease-in;\n                border-bottom: solid 1px ${theme.alternateTextSubcolor};\n            }\n            header::before {\n                content: \"\";\n                position: absolute;\n                display: block;\n                height: 100%;\n                width: 100%;\n                box-shadow: ${theme.shadowColor} 0px 3px 10px 3px;\n            }\n            header.hidden {\n                transform: translateY(-50px);\n            }\n            button {\n                appearance: none;\n                position: relative;\n                border: none;\n                background: none;\n                padding: 0;\n                margin: 5px 10px;\n                width: 40px;\n                height: 40px;\n                display: block;\n                padding-right: 10px;\n                border-right: solid 2px ${theme.textSubcolor};\n            }\n            span {\n                font-family: ${look.font};\n                font-size: ${look.mediumSize}px;\n                color: ${theme.textColor};\n                line-height: 50px;\n            }\n            .spacer {\n                margin-top: 50px;\n            }\n            .line {\n                width: 100%;\n                height: 4px;\n                border-radius: 2px;\n                background-color: ${theme.textColor};\n                margin: 5px 0;\n                pointer-events: none;\n            }\n        `}</style>\n        <header className={shown ? \"\" : \"hidden\"}>\n            <button className={props.animated ? \"animated\" : \"\"} onClick={() => {\n                console.log(\"ham\")\n                if (props.onHamburger) props.onHamburger()\n            }}>\n                <div className=\"line\" />\n                <div className=\"line\" />\n                <div className=\"line\" />\n            </button>\n            <span>{props.title}</span>\n        </header>\n        <div className=\"spacer\" />\n    </>\n}\n\ninterface NavLinkProps {\n    thumb?: JSX.Element;\n    label: string;\n    href: string;\n    selected?: boolean;\n}\nexport const NavLink: React.FC<NavLinkProps> = props => {\n    let theme = useContext(ThemeContext)\n    let look = useContext(LookContext)\n    return <>\n        <style jsx>{`\n            a {\n                text-decoration: none;\n                display: contents;\n                padding: 10px 20px;\n            }\n            div {\n                grid-column: 1;\n                width: 100%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n            span {\n                grid-column: 2;\n                color: ${theme.alternateTextColor};\n                font-family: ${look.font};\n                font-size: ${props.selected ? look.largeSize : look.mediumSize}px;\n                font-weight: ${props.selected ? 800 : 400};\n                margin: 20px 0;\n            }\n        `}</style>\n        <Link href={props.href}>\n            <a>\n                <div>{props.thumb}</div>\n                <span>{props.label}</span>\n            </a>\n        </Link>\n    </>\n}\n\ninterface SidebarProps {\n    path?: string;\n    hidden?: boolean;\n}\nexport const Sidebar: React.FC<SidebarProps> = props => {\n    let theme = useContext(ThemeContext)\n    // let circle = <div style={{height: 15, width: 15, backgroundColor: theme.alternateTextColor, borderRadius: \"50%\"}} />\n    let circle = <></>\n    return <>\n        <style jsx>{`\n            .navigation {\n                display: grid;\n                grid-template-columns: 20px auto;\n                margin: 10px;\n            }\n            header {\n                z-index: 20;\n                position: fixed;\n                width: 250px;\n                height: 100vh;\n                background-color: ${theme.headerColor};\n                box-shadow: ${theme.shadowColor} 5px 0px 8px;\n                transition: transform 0.2s 0s ease-in;\n            }\n            header.hidden {\n                transform: translateX(-260px);\n            }\n            img {\n                margin: 5%;\n                margin-top: 40px;\n            }\n            .spacer {\n                margin-right: 250px;\n            }\n        `}</style>\n        <header className={props.hidden ? \"hidden\" : \"\"}>\n            <img src=\"static/assets/SVG/White-logo.svg\" className=\"logo\" alt=\"Shop logo\" />\n            <div className=\"navigation\">\n                <NavLink selected={props.path == \"/\"} thumb={circle} label=\"All Items\" href=\"/\" />\n                <NavLink selected={props.path == \"/accessories\"} thumb={circle} label=\"Hats\" href=\"/accessories\" />\n                <NavLink selected={props.path == \"/tops\"} thumb={circle} label=\"Tops\" href=\"/tops\" />\n                <NavLink selected={props.path == \"/leggins\"} thumb={circle} label=\"Leggins\" href=\"/leggins\" />\n            </div>\n        </header>\n    </>\n}\n\nexport const Footer: React.FC = props => {\n    let theme = useContext(ThemeContext)\n    let look = useContext(LookContext)\n    return <>\n        <style jsx>{`\n            footer {\n                width: 100%;\n                background-color: ${theme.footerColor};\n                position: relative;\n                bottom: 0;\n                display: flex;\n                align-items: center;\n                font-size: ${look.smallSize}px;\n            }\n            .logo {\n                margin: 20px;\n                margin-top: 40px;\n                height: 100px;\n            }\n            .text-thin {\n                color: ${theme.alternateTextSubcolor};\n                font-family: ${look.font};\n                font-weight: 300;\n            }\n            .text-bold {\n                color: ${theme.alternateTextColor};\n                font-family: ${look.font};\n                font-weight: 650;\n            }\n            a {\n                text-decoration: none;\n            }\n            .copyright {\n                color: ${theme.alternateTextColor};\n                position: absolute;\n                bottom: 0;\n                right: 0;\n                margin: 5px;\n                font-size: ${look.subSmallSize}px;\n                font-family: ${look.font};\n            }\n            .footer-textbox {\n                display: flex;\n                flex-direction: column;\n                margin: 20px;\n            }\n            .footer-contact {\n                font-size: ${look.smallSize}px;\n            }\n            @media (max-width: 700px) {\n                footer {\n                    flex-direction: column;\n                }\n            }\n        `}</style>\n        <footer>\n            <img src=\"static/assets/SVG/White-logo.svg\" className=\"logo\" alt=\"Shop logo\" />\n            <div className=\"footer-textbox\">\n                <span className=\"text-thin\">Designed and developed by</span>\n                <span className=\"text-bold\">Petryk Yaroslav</span>\n            </div>\n            <div className=\"footer-contact\">\n                <div className=\"footer-textbox\">\n                    <span className=\"text-thin\">Email</span>\n                    <span className=\"text-bold\"><a href=\"mailto:yaroslav.petryk@ukma.edu.ua\">yaroslav.petryk@ukma.edu.ua</a></span>\n                </div>\n                <div className=\"footer-textbox\">\n                    <span className=\"text-thin\">Personal website</span>\n                    <span className=\"text-bold\">Should I have one?</span>\n                </div>\n            </div>\n            <span className=\"copyright \">Â© Petryk Yaroslav. 2019. Icon made from <a href=\"http://www.onlinewebfonts.com/icon\">Icon Fonts</a> is licensed by CC BY 3.0</span>\n        </footer>\n    </>\n}\n\nexport const AppFrame: React.FC<{ path?: string; name?: string }> = props => {\n    let [theme, setTheme] = useState(Light)\n    let { width } = useWindowBounds()\n    let mobile: boolean = (width) ? width < 700 : false;\n    let [hiddenSidebar, setHiddenSidebar] = useState(true)\n    let dimmingRef = useRef<HTMLDivElement>(null)\n    useClick(dimmingRef, () => {\n        if (!hiddenSidebar) setHiddenSidebar(true)\n    }, [hiddenSidebar])\n    useKeyDown((e) => {\n        if (!hiddenSidebar && e.key == \"Escape\") setHiddenSidebar(true)\n    }, [hiddenSidebar])\n\n    useEffect(() => {\n        if (width && width < 700 && !hiddenSidebar) setHiddenSidebar(true)\n        if (width && width > 700 && hiddenSidebar) setHiddenSidebar(false)\n    }, [width])\n    useEffect(() => {\n        let match = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n        setTheme(match ? Dark : Light)\n\n        function match_func({ matches }: MediaQueryListEvent) {\n            if (matches) setTheme(Dark)\n            else setTheme(Light)\n        }\n        window.matchMedia(\"(prefers-color-scheme: dark)\").addListener(match_func)\n        return () => window.matchMedia(\"(prefers-color-scheme: dark)\").removeListener(match_func)\n    }, [])\n\n    return <>\n        <link href=\"https://fonts.googleapis.com/css?family=Libre+Baskerville:700&display=swap\" rel=\"stylesheet\" />\n        <ThemeContext.Provider value={theme}>\n            <style global jsx>{`\n                body {\n                    margin: 0;\n                    padding: 0;\n                    background-color: ${theme.backgroundColor};\n                }\n                a {\n                    color: inherit;\n                }\n            `}</style>\n            <style jsx>{`\n                .app {\n                    display: flex;\n                }\n                .content {\n                    width: 100%;\n                    min-height: 100vh;\n                    position: relative;\n                    overflow-x: hidden;\n                }\n                .sidebar {\n                    margin-right: 250px;\n                }\n                .dimmer {\n                    width: 100vw;\n                    height: 100vh;\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    background-color: ${theme.dimmingColor};\n                    opacity: 1;\n                    z-index: 15;\n                    transition: opacity 0.2s 0s ease-in;\n                }\n                .dimmer.hidden {\n                    opacity: 0;\n                    z-index: 0;\n                }\n                .spacer {\n                    margin-right: 250px;\n                }\n            `}</style>\n            <Head>\n                <title>{\"Fast Shop\" + (props.name ? `: ${props.name}` : \"\")}</title>\n            </Head>\n            <div className=\"app\">\n                <Sidebar path={props.path} hidden={hiddenSidebar} />\n                {mobile\n                    ? <>\n                        <div ref={dimmingRef} className={\"dimmer\" + (hiddenSidebar ? \" hidden\" : \"\")} />\n                        <MobileHeader title={props.name || \"Fast shop\"} onHamburger={() => {\n                            setHiddenSidebar(!hiddenSidebar)\n                        }} />\n                    </>\n                    : <div className=\"spacer\" />\n                }\n                <div className=\"content\">\n                    {props.children}\n                    <VSpaced style={{ bottom: 0, width: \"100%\" }}>\n                        <Footer />\n                    </VSpaced>\n                </div>\n            </div>\n        </ThemeContext.Provider>\n    </>\n}\n\ninterface StorefrontProps {\n    sections?: SectionProps[];\n    items?: StoreItem[];\n}\nexport const Storefront: React.FC<StorefrontProps> = props => {\n    let [shoppingCartItems, dispatch] = useReducer(SCReducer, { shown: false, items: [] })\n\n    useEffect(() => {\n        let version = localStorage.getItem(\"cart_version\")\n        if (!version || !(version == SHOPPING_CART_VERSION as any)) {\n            localStorage.setItem(\"cart\", JSON.stringify({ items: [] }))\n            localStorage.setItem(\"cart_version\", String(SHOPPING_CART_VERSION))\n        } else {\n            let cart = localStorage.getItem(\"cart\")\n            try {\n                if (cart) dispatch({ type: SCActionType.reset, resetState: JSON.parse(cart) })\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem(\"cart\", JSON.stringify(shoppingCartItems.items))\n    }, [shoppingCartItems])\n\n    let sections: JSX.Element[] = []\n    const buyHandler = (item: StoreItem) => {\n        dispatch({ type: SCActionType.add, id: item.id, count: 1, fallbackItem: item })\n    }\n    if (props.items) {\n        sections.push(<Section items={props.items} key={-1} onBuy={buyHandler} />)\n    }\n    if (props.sections) {\n        sections.push(...props.sections.map((props, index) => <Section {...props} key={index} onBuy={buyHandler} />))\n    }\n    return <ShoppingCartContext.Provider value={dispatch}>\n        {sections}\n        <ShoppingCart {...shoppingCartItems} />\n    </ShoppingCartContext.Provider>\n}\n\ninterface ErrorMsgProps {\n    prominent?: boolean;\n    msg: string;\n}\nexport const ErrorMsg: React.FC<ErrorMsgProps> = props => {\n    let theme = useContext(ThemeContext)\n    let look = useContext(LookContext)\n    let [shown, setShown] = useState(false)\n\n    useEffect(() => {\n        if (!props.prominent && shown) {\n            let handle = setTimeout(() => {\n                setShown(false)\n            }, 6000)\n            return () => clearTimeout(handle)\n        }\n    }, [shown])\n    useEffect(() => {\n        setTimeout(() => setShown(true), 500)\n    }, [])\n\n    return <>\n        <style jsx>{`\n            span {\n                color: ${theme.textColor};\n                font-family: ${look.font};\n                font-size: ${look.smallSize}px;\n            }\n            .container {\n                padding: 10px 20px;\n                display: flex;\n                background-color: ${theme.mobileHeaderColor};\n                box-shadow: ${theme.shadowColor} 3px 3px 10px 3px;\n                transition: transform 0.4s 0s ease-in;\n                position: fixed;\n                z-index: 30;\n                top: 0;\n                transform: translateY(-200%);\n                border-radius: calc( ( 2em + 20px ) / 2);\n                margin: 20px;\n                align-items: center;\n            }\n            .container.shown {\n                transform: translateY(0);\n            }\n            .cross {\n                appearance: none;\n                border: none;\n                background-color: ${theme.mobileHeaderColor};\n                padding: 0;\n                width: 30px;\n                height: 30px;\n                /* padding: 10px; */\n                position: relative;\n                margin-left: 5px;\n                margin-right: -5px;\n                border-radius: 15px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            .cross:active {\n                background-color: ${theme.subbackgroundColor};\n            }\n            .cross:hover::before {\n                background-color: ${theme.textColor}\n            }\n            .cross:hover::after {\n                background-color: ${theme.textColor}\n            }\n            .cross::before {\n                content: \"\";\n                display: block;\n                position: absolute;\n                width: 66%;\n                height: 2px;\n                border-radius: 1px;\n                background-color: ${theme.textSubcolor};\n                transform: rotate(45deg);\n            }\n            .cross::after {\n                content: \"\";\n                display: block;\n                position: absolute;\n                width: 66%;\n                height: 2px;\n                border-radius: 1px;\n                background-color: ${theme.textSubcolor};\n                transform: rotate(-45deg);\n            }\n            .center {\n                width: 100%;\n                display: flex;\n                justify-content: center;\n            }\n        `}</style>\n        <div className=\"center\">\n            <div className={\"container\" + (shown ? \" shown\" : \"\")}>\n                <span>{props.msg}</span>\n                <button className=\"cross\" onClick={() => setShown(false)} />\n            </div>\n        </div>\n    </>\n}"],"mappings":"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","sourceRoot":""}